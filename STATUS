----------
2011-7-12:

Working on the GSL material, which will pay off here fairly
soon I think.  This NCI is critical in the long run.

---------
2011-7-9:

NCI success!

In R's source tree, src/nmath/standalone,
    make
    make install
This creates /usr/local/lib64/libRmath.so and we may need
to add to LD_LIBRARY_PATH for this to work (and I did it).
Now in C/C++, we would need (but don't need to worry in Parrot):
     #define MATHLIB_STANDALONE
     #include <Rmath.h>
and the linking flag -lRmath.

GOOD NEWS: It worked!  My first real independent success.
Also, bubaflub pointed to his GSOC project that would be
worth looking at:
    http://www.parrot.org/content/introducing-parrot-gmp
    http://github.com/bubaflub/parrot-gmp


---------
2011-7-8:

A little "todo" list for Jay in the next week or two:

- NCI example(s), at least generating random normals by using
the R libraries, and possibly something from the Parrot world,
like providing R-syntax regular expressions?

- Look into the mmap

- The possibility of a graphics kludge via d3 and javascript?

- Try to fix up the 'for' loop properly.

- Move up to 3.6.0 and try to get proper inheritance working.


---------
2011-7-8:

Creating the github repository.  At this point, the hack of
the squaak language still has some squaakish characteristics.

- Using Parrot 3.3.0 (will upgrade I hope soon)

- I haven't quite got the new 'for' action working (trying two
approaches).

- I have some basic class definitions, but haven't really done
anything and need to figure out inheritance (maybe Parrot 3.6.0
will help, arriving next week).

- I've done some things that may "look right" but aren't done
the "right way".  Advice is welcome, to help me learn.

